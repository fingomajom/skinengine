; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	d:\lidengwang\kis\trunk\src\sandbox\Detours Express 2.1\samples\disas\x86.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_value	DD	01H DUP (?)
_BSS	ENDS
PUBLIC	_TestCodes
; Function compile flags: /Odspy
; File d:\lidengwang\kis\trunk\src\sandbox\detours express 2.1\samples\disas\x86.cpp
;	COMDAT _TestCodes
_TEXT	SEGMENT
_TestCodes PROC						; COMDAT

; 14   :     __asm {
; 15   : // Each instruction is proceeded by an "int 3".
; 16   :         int 3;

  00000	cc		 int	 3

; 17   :         mov     ecx, eax;

  00001	8b c8		 mov	 ecx, eax

; 18   :         int 3;

  00003	cc		 int	 3

; 19   :         mov     ebx, 0ffff000eh;

  00004	bb 0e 00 ff ff	 mov	 ebx, -65522		; ffff000eH

; 20   :         int 3;

  00009	cc		 int	 3

; 21   :         call    ebx;

  0000a	ff d3		 call	 ebx

; 22   :         int 3;

  0000c	cc		 int	 3

; 23   :         call    dword ptr [eax];

  0000d	ff 10		 call	 DWORD PTR [eax]

; 24   :         int 3;

  0000f	cc		 int	 3

; 25   :         call    dword ptr [ebx];

  00010	ff 13		 call	 DWORD PTR [ebx]

; 26   :         int 3;

  00012	cc		 int	 3

; 27   :         call    dword ptr [ecx];

  00013	ff 11		 call	 DWORD PTR [ecx]

; 28   :         int 3;

  00015	cc		 int	 3

; 29   :         call    dword ptr [edx];

  00016	ff 12		 call	 DWORD PTR [edx]

; 30   :         int 3;

  00018	cc		 int	 3

; 31   :         jmp     dword ptr [eax];

  00019	ff 20		 jmp	 DWORD PTR [eax]

; 32   :         int 3;

  0001b	cc		 int	 3

; 33   :         jmp     dword ptr [ebx];

  0001c	ff 23		 jmp	 DWORD PTR [ebx]

; 34   :         int 3;

  0001e	cc		 int	 3

; 35   :         jmp     dword ptr [ecx];

  0001f	ff 21		 jmp	 DWORD PTR [ecx]

; 36   :         int 3;

  00021	cc		 int	 3

; 37   :         jmp     dword ptr [edx];

  00022	ff 22		 jmp	 DWORD PTR [edx]

; 38   :         int 3;

  00024	cc		 int	 3

; 39   :         call    ecx;

  00025	ff d1		 call	 ecx

; 40   :         int 3;

  00027	cc		 int	 3

; 41   :         call    eax;

  00028	ff d0		 call	 eax

; 42   :         int 3;

  0002a	cc		 int	 3

; 43   :         mov     ebx, 0ffff000eh;

  0002b	bb 0e 00 ff ff	 mov	 ebx, -65522		; ffff000eH

; 44   :         int 3;

  00030	cc		 int	 3

; 45   :         push    eax;

  00031	50		 push	 eax

; 46   :         int 3;

  00032	cc		 int	 3

; 47   :         call    ebx;

  00033	ff d3		 call	 ebx

; 48   :         int 3;

  00035	cc		 int	 3

; 49   :         cmp     ebx, 0;

  00036	83 fb 00	 cmp	 ebx, 0

; 50   :         int 3;

  00039	cc		 int	 3

; 51   :         cmp     byte ptr [value], 77h;

  0003a	80 3d 00 00 00
	00 77		 cmp	 BYTE PTR _value, 119	; 00000077H

; 52   :         int 3;

  00041	cc		 int	 3

; 53   :         cmp     dword ptr [value], 77h;

  00042	83 3d 00 00 00
	00 77		 cmp	 DWORD PTR _value, 119	; 00000077H

; 54   :         int 3;

  00049	cc		 int	 3

; 55   :         cmp     dword ptr [value], 77777777h;

  0004a	81 3d 00 00 00
	00 77 77 77 77	 cmp	 DWORD PTR _value, 2004318071 ; 77777777H

; 56   : 
; 57   : // The list is terminated by an "int 3".
; 58   :         int 3;

  00054	cc		 int	 3

; 59   :         int 3;

  00055	cc		 int	 3

; 60   :         ret;

  00056	c3		 ret	 0
_TestCodes ENDP
_TEXT	ENDS
END
